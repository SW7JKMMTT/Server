<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- If the server is in full local mode -->
    <beans profile="default">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-local.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
            <property name="username" value="${rest.db.username}"/>
            <property name="password" value="${rest.db.password}"/>
            <property name="url" value="${rest.db.url}"/>
            <property name="driverClassName" value="${rest.db.driver}"/>
        </bean>
        <bean id="flyway-migration-location" class="java.util.ArrayList">
            <constructor-arg>
                <list>
                    <value>classpath:sql.migration</value>
                    <value>classpath:sql.localdata</value>
                </list>
            </constructor-arg>
        </bean>
    </beans>

    <!-- If the server is in semi-local mode (Using the real database) -->
    <beans profile="integration">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="dataSource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="username" value="${rest.db.username}"/>
            <property name="password" value="${rest.db.password}"/>
            <property name="url" value="${rest.db.url}"/>
            <property name="driverClassName" value="${rest.db.driver}"/>
        </bean>
    </beans>

    <!-- If the server is in production mode -->
    <beans profile="production">
        <bean name="propertyConfigurerProd"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:files-prod.properties</value>
                </list>
            </property>
        </bean>

        <bean id="dataSource"
              class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="MySqlDS" />
        </bean>

        <bean id="flyway-migration-location" class="java.util.ArrayList">
            <constructor-arg>
                <list>
                    <value>classpath:sql.migration</value>
                </list>
            </constructor-arg>
        </bean>
    </beans>

    <beans>
        <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
            <property name="locations" ref="flyway-migration-location" />
            <property name="dataSource" ref="dataSource" />
        </bean>

        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

        <bean id="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              depends-on="flyway">
            <property name="dataSource" ref="dataSource" />
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                    <property name="showSql" value="true" />
                    <property name="databasePlatform" value="${rest.db.dialect}"/>
                </bean>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.enable_lazy_load_no_trans">true</prop>
                </props>
            </property>
            <property name="packagesToScan">
                <list>
                    <value>dk.aau.giraf.rest</value>
                </list>
            </property>
        </bean>

        <!-- Spring transaction management -->
        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"/>

        <bean id="userIconFileDaoImpl" class="dk.aau.giraf.rest.persistence.file.dao.UserIconFileDaoImpl">
            <property name="storagePath" value="${usericons.location}" />
        </bean>

        <bean id="pictogramImageFileDaoImpl" class="dk.aau.giraf.rest.persistence.file.dao.PictogramImageFileDaoImpl">
            <property name="storagePath" value="${pictogramimage.location}" />
        </bean>

        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>


</beans>
