<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <beans>
        <bean id="entityManagerFactory" abstract="true"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                    <property name="showSql" value="true" />
                    <property name="databasePlatform" value="org.hibernate.dialect.PostgreSQL95Dialect" />
                    <property name="generateDdl" value="false" />
                </bean>
            </property>
            <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
            <property name="packagesToScan">
                <list>
                    <value>rocks.stalin.sw708e16.server.core</value>
                </list>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.search.lucene_version">LUCENE_54</prop>
                    <prop key="hibernate.id.new_generator_mappings">true</prop>
                </props>
            </property>
        </bean>
    </beans>

    <!-- If the server is in full local mode -->
    <beans profile="default">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="h2Server" class="org.h2.tools.Server" factory-method="createTcpServer" init-method="start" destroy-method="stop" depends-on="h2WebServer">
            <constructor-arg value="-tcp,-tcpAllowOthers,-tcpPort,9092"/>
        </bean>
        <bean id="h2WebServer" class="org.h2.tools.Server" factory-method="createWebServer" init-method="start" destroy-method="stop">
            <constructor-arg value="-web,-webAllowOthers,-webPort,8082"/>
        </bean>

        <bean id="datasource"
              class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="h2Server">
            <property name="username" value="sa" />
            <property name="password" value="" />
            <property name="url" value="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;" />
            <property name="driverClassName" value="org.h2.Driver" />
        </bean>

        <bean id="entityFactory" parent="entityManagerFactory">
            <property name="dataSource" ref="datasource" />
            <property name="jpaProperties">
                <props merge="true">
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                </props>
            </property>
        </bean>
    </beans>

    <!-- If the server is in production mode -->
    <beans profile="production">
        <bean name="propertyConfigurerProd"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-prod.properties</value>
                    <value>classpath:files-prod.properties</value>
                </list>
            </property>
        </bean>

        <bean id="dataSource"
              class="org.springframework.jndi.JndiObjectFactoryBean">
            <property name="jndiName" value="PostgresDS" />
        </bean>

        <bean id="entityFactory" parent="entityManagerFactory">
            <property name="dataSource" ref="dataSource" />
            <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
            <property name="jpaProperties">
                <props merge="true">
                    <prop key="wildfly.jpa.hibernate.search.module">none</prop>
                    <prop key="jboss.as.jpa.providerModule">application</prop>
                    <prop key="hibernate.search.default.indexmanager">near-real-time</prop>
                    <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                    <prop key="hibernate.search.default.indexBase">/var/lucene/indexes</prop>
                </props>
            </property>
        </bean>

        <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
            <property name="locations">
                <list>
                    <value>classpath:sql</value>
                </list>
            </property>
            <property name="dataSource" ref="dataSource" />
        </bean>
    </beans>

    <beans>
        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

        <!-- Spring transaction management -->
        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"/>

        <bean id="userIconFileDaoImpl" class="rocks.stalin.sw708e16.server.persistence.file.dao.hibernate.UserIconFileDaoImpl">
            <property name="storagePath" value="${usericons.location}" />
        </bean>

        <bean id="vehicleIconFileDaoImpl" class="rocks.stalin.sw708e16.server.persistence.file.dao.hibernate.VehicleIconFileDaoImpl">
            <property name="storagePath" value="${vehicleicons.location}" />
        </bean>

        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>


</beans>
