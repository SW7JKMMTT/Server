<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- If the server is in full local mode -->
    <beans profile="default">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="mongo" class="cz.jirutka.spring.embedmongo.EmbeddedMongoFactoryBean"
              p:bindIp="${mongo.db.host}"
              p:port="${mongo.db.port}"/>

        <bean id="vendorAdapter" class="dk.aau.giraf.rest.persistence.spring.HibernateOGMJpaVendorAdapter" depends-on="mongo">
            <property name="host" value="${mongo.db.host}" />
            <property name="port" value="${mongo.db.port}" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="${mongo.db.driver}" />
            <property name="database" value="${mongo.db.database}" />
        </bean>
    </beans>

    <!-- If the server is in semi-local mode (Using the real database) -->
    <beans profile="integration">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-prod.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="vendorAdapter" class="dk.aau.giraf.rest.persistence.spring.HibernateOGMJpaVendorAdapter">
            <property name="host" value="${mongo.db.host}" />
            <property name="port" value="${mongo.db.port}" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="${mongo.db.driver}" />
            <property name="database" value="${mongo.db.database}" />
        </bean>
    </beans>

    <!-- If the server is in production mode -->
    <beans profile="production">
        <bean name="propertyConfigurerProd"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-prod.properties</value>
                    <value>classpath:files-prod.properties</value>
                </list>
            </property>
        </bean>

        <bean id="vendorAdapter" class="dk.aau.giraf.rest.persistence.spring.HibernateOGMJpaVendorAdapter">
            <property name="host" value="${mongo.db.host}" />
            <property name="port" value="${mongo.db.port}" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="${mongo.db.driver}" />
            <property name="database" value="${mongo.db.database}" />
        </bean>
    </beans>

    <beans>
        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

        <bean id="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="vendorAdapter">
            <property name="jpaVendorAdapter" ref="vendorAdapter" />
            <property name="packagesToScan">
                <list>
                    <value>dk.aau.giraf.rest.core</value>
                </list>
            </property>
        </bean>

        <!-- Spring transaction management -->
        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"/>

        <bean id="userIconFileDaoImpl" class="dk.aau.giraf.rest.persistence.file.dao.UserIconFileDaoImpl">
            <property name="storagePath" value="${usericons.location}" />
        </bean>

        <bean id="pictogramImageFileDaoImpl" class="dk.aau.giraf.rest.persistence.file.dao.PictogramImageFileDaoImpl">
            <property name="storagePath" value="${pictogramimage.location}" />
        </bean>

        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>


</beans>
