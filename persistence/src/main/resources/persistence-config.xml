<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

    <!-- If the server is in full local mode -->
    <beans profile="default">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="mongo" class="rocks.stalin.sw708e16.server.spring.EmbeddedMongoFactoryBean"/>

        <bean id="informationProvider"
              class="rocks.stalin.sw708e16.server.spring.connection.EmbeddedConnectionInformationProviderBean">
            <property name="process" ref="mongo" />
        </bean>

        <bean id="vendorAdapter" class="rocks.stalin.sw708e16.server.spring.HibernateOgmJpaVendorAdapter" depends-on="mongo">
            <property name="informationProvider" ref="informationProvider" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="mongodb" />
            <property name="database" value="test" />
        </bean>

        <bean id="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="vendorAdapter">
            <property name="jpaVendorAdapter" ref="vendorAdapter" />
            <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
            <property name="packagesToScan">
                <list>
                    <value>rocks.stalin.sw708e16.server.core</value>
                </list>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="wildfly.jpa.hibernate.search.module">none</prop>
                    <prop key="jboss.as.jpa.providerModule">application</prop>
                </props>
            </property>
        </bean>
    </beans>

    <!-- If the server is in semi-local mode (Using the real database) -->
    <beans profile="integration">
        <bean name="propertyConfigurer"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-prod.properties</value>
                    <value>classpath:files.properties</value>
                </list>
            </property>
        </bean>

        <bean id="vendorAdapter" class="rocks.stalin.sw708e16.server.spring.HibernateOgmJpaVendorAdapter">
            <property name="host" value="${mongo.db.host}" />
            <property name="port" value="${mongo.db.port}" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="${mongo.db.driver}" />
            <property name="database" value="${mongo.db.database}" />
        </bean>
    </beans>

    <!-- If the server is in production mode -->
    <beans profile="production">
        <bean name="propertyConfigurerProd"
              class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
              p:ignoreUnresolvablePlaceholders="true"
              p:ignoreResourceNotFound="true">
            <property name="locations">
                <list>
                    <value>classpath:db-prod.properties</value>
                    <value>classpath:files-prod.properties</value>
                </list>
            </property>
        </bean>

        <bean id="vendorAdapter" class="rocks.stalin.sw708e16.server.spring.HibernateOgmJpaVendorAdapter">
            <property name="host" value="127.0.0.1" />
            <property name="port" value="27017" />
            <property name="createDatabase" value="true" />
            <property name="providerStr" value="mongodb" />
            <property name="database" value="test" />
        </bean>

        <bean id="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="vendorAdapter">
            <property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
            <property name="jpaVendorAdapter" ref="vendorAdapter" />
            <property name="packagesToScan">
                <list>
                    <value>rocks.stalin.sw708e16.server.core</value>
                </list>
            </property>
            <property name="jpaProperties">
                <props>
                    <prop key="wildfly.jpa.hibernate.search.module">none</prop>
                    <prop key="jboss.as.jpa.providerModule">application</prop>
                    <prop key="hibernate.search.default.directory_provider">filesystem</prop>
                    <prop key="hibernate.search.default.indexBase">/var/lucene/indexes</prop>
                </props>
            </property>
        </bean>
    </beans>

    <beans>
        <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

        <!-- Spring transaction management -->
        <bean id="transactionManager"
              class="org.springframework.orm.jpa.JpaTransactionManager"/>

        <bean id="userIconFileDaoImpl" class="rocks.stalin.sw708e16.server.persistence.file.dao.hibernate.UserIconFileDaoImpl">
            <property name="storagePath" value="${usericons.location}" />
        </bean>

        <bean id="vehicleIconFileDaoImpl" class="rocks.stalin.sw708e16.server.persistence.file.dao.hibernate.VehicleIconFileDaoImpl">
            <property name="storagePath" value="${vehicleicons.location}" />
        </bean>



        <tx:annotation-driven transaction-manager="transactionManager"/>
    </beans>


</beans>
